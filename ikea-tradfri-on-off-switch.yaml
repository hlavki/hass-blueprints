blueprint:
  name: IKEA Tradfri on/off switch
  description: |
    "Control your light(s) with IKEA Tradfri on/off switch
    
    Select the Tradfri remote and your lights.
    You can turn the lights On / Off, or hold the buttons to dim the lights"
  domain: automation
  input:
    sensor_entity:
      name: Switch
      description: The action sensor for listening state changes
      selector:
        entity:
          domain: sensor
    light:
      name: Light
      description: The lights that will be controlled
      selector:
        target:
          entity:
            domain: light
mode: restart
trigger:
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input sensor_entity
action:
- variables:
    command: "{{ trigger.event.data.new_state.state }}"
- choose:
  - conditions:
    - "{{ command == 'on' }}"
    sequence:
    - service: light.turn_on
      target: !input 'light'
      data:
        transition: 1
  - conditions:
    - "{{ command == 'off' }}"
    sequence:
    - service: light.turn_off
      target: !input 'light'
      data:
        transition: 1
  - conditions:
    - "{{ command == 'brightness_move_up' }}"
    sequence:
      repeat:
        while:
        - condition: template
          value_template: "{{ light.brightness_pct <= 100 }}"
        sequence:
        - service: light.turn_on
          target: !input 'light'
          data:
            transition: 1
            brightness_step_pct: 10
        - delay: 1
  - conditions:
    - "{{ command == 'brightness_move_down' }}"
    sequence:
      repeat:
        while:
        - condition: template
          value_template: "{{ light.brightness_pct >= 0 }}"
        sequence:
        - service: light.turn_on
          target: !input 'light'
          data:
            transition: 1
            brightness_step_pct: -10
        - delay: 1
  - conditions:
    - "{{ command == 'brightness_stop' }}"
    sequence:
    - service: light.turn_on
      target: !input 'light'